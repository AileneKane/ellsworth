#Summarize number of trees in each plot to get pre-treatment tree density
dens<-aggregate(treed$TAG,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),length)
colnames(dens)<-c("SITE_ID","BASIN","PLOT","predens")
dbh.mn<-aggregate(treed$DBH,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(dbh.mn)<-c("SITE_ID","BASIN","PLOT","dbh.mn")
ht.mn<-aggregate(treed$HT,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(ht.mn)<-c("SITE_ID","BASIN","PLOT","dbh.mn")
crown.mn<-aggregate(treed$CROWN,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(crown.mn)<-c("SITE_ID","BASIN","PLOT","crown.mn")
#merge density with other plot data
plotd2<-full_join(plotd,dens)#plot-level data
plotd2<-full_join(plotd2,dbh.mn)#plot-level data
plotd2<-left_join(plotd2,ht.mn)#plot-level data
plotd2<-full_join(plotd2,crown.mn)#plot-level data
treed2<-left_join(treed,plotd2)#individal tree data
dim(treed2)
#first just see how much variation there is by basin and treatment
densmod<-lmer(predens~AGE_BH_2006 + (1|BLOCK), data=plotd2)
densvar<-##how do i extraxt block level variance? want this for my data simulations!
htmod<-lmer(HT~ AGE_BH_2006+(1|BLOCK), data=treed2)
dbhmod<-lmer(DBH~ AGE_BH_2006+(1|BLOCK), data=treed2)
crownmod<-lmer(CROWN~ AGE_BH_2006+(1|BLOCK), data=treed2)
summary(densmod)#positive effect of age on density, before treatment, there is much higher variance by block than by TRT!
summary(htmod)#positive effect of age on ht, higher variance by TRT...
summary(dbhmod)#positive effect of age on dbh, similar variance by TRT and Block
summary(crownmod)#positive effect of age on crown, lsightly higher variance in TRt than block
#
colors<-c("darkblue","lightgreen","goldenrod")
symbs<-c(21,22,23)
blocks<-unique(plotd2$BLOCK)
treats<-unique(plotd2$TRT)
windows()
plot(plotd2$AGE_BH_2006,plotd2$predens, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Density, 2006 (trees/plot)")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
plot(plotd2$AGE_BH_2006,plotd2$dbh.mn, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Mean DBH")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
pdf(paste("analyses/figures/pretrt_agevsdens.pdf",sep=""),height=6,width=6)
#windows()
plot(plotd2$AGE_BH_2006,plotd2$predens, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Density, 2006 (trees/plot)")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
pdf(paste("analyses/figures/pretrt_agevsht.pdf",sep=""),height=6,width=6)
#windows()
plot(plotd2$AGE_BH_2006,plotd2$HT, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Mean DBH")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
dev.off()
colors<-c("darkblue","lightgreen","goldenrod")
symbs<-c(21,22,23)
blocks<-unique(plotd2$BLOCK)
treats<-unique(plotd2$TRT)
pdf(paste("analyses/figures/pretrt_agevsdens.pdf",sep=""),height=6,width=6)
#windows()
plot(plotd2$AGE_BH_2006,plotd2$predens, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Density, 2006 (trees/plot)")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
dev.off()
pdf(paste("analyses/figures/pretrt_agevsdbh.pdf",sep=""),height=6,width=6)
#windows()
plot(plotd2$AGE_BH_2006,plotd2$dbh.mn, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Mean DBH")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
dev.off()
pdf(paste("analyses/figures/pretrt_agevsht.pdf",sep=""),height=6,width=6)
#windows()
plot(plotd2$AGE_BH_2006,plotd2$HT, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Mean DBH")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
dev.off()
pdf(paste("analyses/figures/pretrt_agevscrown.pdf",sep=""),height=6,width=6)
#windows()
plot(plotd2$AGE_BH_2006,plotd2$CROWN, pch=symbs[as.numeric(as.factor(plotd2$TRT))], bg=colors[as.numeric(as.factor(plotd2$BLOCK))], xlab="Age, 2006 (years)", ylab= "Mean DBH")
legend("topright", legend=c("C","N","S","THIN","CON","ROAD"),pch=c(21,21,21,symbs),pt.bg=c(colors,"lightgreen","lightgreen","lightgreen") )
dev.off()
#Simulating plot resurvey data to figure out how many plots we need to resurvey
#Started November 8, 2019 by ailene ettinger
#ailene.ettinger@tnc.org
# housekeeping
#helpful website for simulatig: https://aosmith.rbind.io/2018/04/23/simulate-simulate-part-2/#simulate-simulate-dance-to-the-music
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(dplyr)
library(lme4)
library(scales)
#set working directory
setwd("~/GitHub/ellsworth")
#1. read in tree dat, plot data, and treatment data
treed<-read.csv("data/LIVETREES_CLEAN_04282008.csv", header=TRUE)
plotd<-read.csv("data/PLOT_CLEAN_11062008.csv", header=TRUE)
trtd<-read.csv("data/Ellsworth_stands_treatment_data.csv", header=TRUE)
#2. put the data together and standardize some columns for model fitting
source("analyses/source/prep_data.R")
source('~/GitHub/ellsworth/analyses/source/run_premods.R')
#first just see how much variation there is by basin and treatment
densmod<-lmer(predens~AGE_BH_2006 + (1|BLOCK), data=plotd2)
summary(densmod)
VarCorr(densmod),comp="Variance")
densvar<-VarCorr(densmod,comp="Variance")
densvar
source('~/GitHub/ellsworth/analyses/source/run_premods.R')
source('~/GitHub/ellsworth/analyses/source/run_premods.R')
source('~/GitHub/ellsworth/analyses/source/run_premods.R')
densd
htsd
htsd<-VarCorr(htmod,comp="Variance")
htsd
dbhsd
crownsd
#first just see how much variation there is by basin and treatment
densmod<-lmer(predens~age2006.z + (1|BLOCK), data=plotd2)
summary(densmod)
densd<-VarCorr(densmod,comp="Variance")
VarCorr(densmod,comp="Variance")
VarCorr(densmod,comp="Variance")[1]
VarCorr(densmod,comp="Variance")[1,1]
VarCorr(densmod,comp="Variance")[1][2]
dim(VarCorr(densmod,comp="Variance")[1])
length(VarCorr(densmod,comp="Variance")[1])
VarCorr(densmod,comp="Variance")[1]
VarCorr(densmod,comp="Variance")[1]$Block
dens.b = 1#effect of pre-density
age.b = -.5#age effect (older stands have lower post-density?)
trt.b = -1 #trt is amount removed (0,3 x predens)
sigma.bl = 14#change to estimated block-level sigma from 2006 data print(VarCorr(study),comp="Variance")
sigma = .5#change to estimated sigma from 2006 data using
b0 = 0 # change to something else?
#use the effect sizes and predictors plus error to generate the y variable
#betas<-c(dens.b,age.b)
#ypred<- as.matrix(x)%*%betas + rnorm(nrow(x),0,sigma)
#plot(x$predens,ypred)
#alldatmod<-lm(ypred~x$predens+x$AGE_BH_2006)
#coef(alldatmod)
block = x$block
nblock = length(unique(x$block))
nplot = 28
blockeff = rep(rnorm(nblock, 0, sigma.bl), each = nplot)
ploteff = rnorm(nblock*nplot, 0, sigma)
(ypred = b0 + dens.b*x$predens.z + age.b*x$age2006.z + trt.b*x$trt.z+ blockeff + ploteff)
lmer(ypred ~ predens.z + age2006.z + trt.z+ (1|block), data=x )
fulldat<-cbind(ypred,x)
nplots<-rep(c(5,10,15,20,25), times=10)
allplots<-c()
for(i in 1:length(nplots)){
subsdatc<-sample_n(fulldat[fulldat$block=="C",], nplots[i])
subsdatn<-sample_n(fulldat[fulldat$block=="N",], nplots[i])
subsdats<-sample_n(fulldat[fulldat$block=="S",], nplots[i])
subsdat<-sbind(subsdatc,subsdatn,subsdats)
fit<-lmer(ypred ~ predens.z + age2006.z + trt.z+ (1|block), data=subsdat)
fit.sum<-c(nplots[i],fixef(fit),confint(fit)[3,],confint(fit)[4,],confint(fit)[5,],confint(fit)[6,])
allplots<-rbind(allplots,fit.sum)
}
allplots<-as.data.frame(allplots)
colnames(allplots)<-c("n","int","predens.b","age.b","trt.b","int.lc","int.uc","predens.b.lc","predens.b.uc","age.b.lc","age.b.uc","trt.b.lc","trt.b.uc")
ulldat<-cbind(ypred,x)
nplots<-rep(c(5,10,15,20,25), times=10)
allplots<-c()
for(i in 1:length(nplots)){
subsdatc<-sample_n(fulldat[fulldat$block=="C",], nplots[i])
subsdatn<-sample_n(fulldat[fulldat$block=="N",], nplots[i])
subsdats<-sample_n(fulldat[fulldat$block=="S",], nplots[i])
subsdat<-rbind(subsdatc,subsdatn,subsdats)
fit<-lmer(ypred ~ predens.z + age2006.z + trt.z+ (1|block), data=subsdat)
fit.sum<-c(nplots[i],fixef(fit),confint(fit)[3,],confint(fit)[4,],confint(fit)[5,],confint(fit)[6,])
allplots<-rbind(allplots,fit.sum)
}
allplots<-as.data.frame(allplots)
colnames(allplots)<-c("n","int","predens.b","age.b","trt.b","int.lc","int.uc","predens.b.lc","predens.b.uc","age.b.lc","age.b.uc","trt.b.lc","trt.b.uc")
p
source('~/GitHub/ellsworth/analyses/source/run_premods.R')
pdf(paste("analyses/figures/plotnums_var",sigma,".pdf",sep=""),height=5,width=8)
#quartz()
par(mfrow=c(1,3))
plot(allplots$n,allplots$predens.b,main="pre-density",ylim=c(0,2))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$predens.b.lc[i],allplots$n[i],allplots$predens.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=dens.b, lwd=2, col="red")
plot(allplots$n,allplots$age.b,main="age",ylim=c(-1,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$age.b.lc[i],allplots$n[i],allplots$age.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=age.b, lwd=2, col="red")
plot(allplots$n,allplots$trt.b,main="trt",ylim=c(-1.5,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$trt.b.lc[i],allplots$n[i],allplots$trt.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=trt.b, lwd=2, col="red")
dev.off()
#quartz()
windows()
par(mfrow=c(1,3))
plot(allplots$n,allplots$predens.b,main="pre-density",ylim=c(0,2))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$predens.b.lc[i],allplots$n[i],allplots$predens.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=dens.b, lwd=2, col="red")
plot(allplots$n,allplots$age.b,main="age",ylim=c(-1,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$age.b.lc[i],allplots$n[i],allplots$age.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=age.b, lwd=2, col="red")
plot(allplots$n,allplots$trt.b,main="trt",ylim=c(-1.5,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$trt.b.lc[i],allplots$n[i],allplots$trt.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=trt.b, lwd=2, col="red")
#first just see how much variation there is by basin and treatment
densmod<-lmer(predens~age2006.z + (1|BLOCK), data=plotd2)
summary(densmod)
confint
confint(fit)
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(dplyr)
library(lme4)
library(scales)
#set working directory
setwd("~/GitHub/ellsworth")
#1. read in tree dat, plot data, and treatment data
treed<-read.csv("data/LIVETREES_CLEAN_04282008.csv", header=TRUE)
plotd<-read.csv("data/PLOT_CLEAN_11062008.csv", header=TRUE)
trtd<-read.csv("data/Ellsworth_stands_treatment_data.csv", header=TRUE)
#2. put the data together and standardize some columns for model fitting
source("analyses/source/prep_data.R")
#3. fit models of pre-treatment data to get estimates of block-level and plot-level varianace
source("analyses/source/run_premods.R")
#4. set expected effect sizes for simulating data
dens.b = 1#effect of pre-density
age.b = -.5#age effect (older stands have lower post-density?)
trt.b = -1 #trt is amount removed (0,3 x predens)
sigma.bl = 10#change to estimated block-level sigma from 2006 data print(VarCorr(study),comp="Variance")
sigma = .5#change to estimated sigma from 2006 data using
b0 = 0 # change to something else?
#use the effect sizes and predictors plus error to generate the y variable
#betas<-c(dens.b,age.b)
#Simulating plot resurvey data to figure out how many plots we need to resurvey
#Started November 8, 2019 by ailene ettinger
#ailene.ettinger@tnc.org
# housekeeping
#helpful website for simulatig: https://aosmith.rbind.io/2018/04/23/simulate-simulate-part-2/#simulate-simulate-dance-to-the-music
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(dplyr)
library(lme4)
library(scales)
#set working directory
setwd("~/GitHub/ellsworth")
#1. read in tree dat, plot data, and treatment data
treed<-read.csv("data/LIVETREES_CLEAN_04282008.csv", header=TRUE)
plotd<-read.csv("data/PLOT_CLEAN_11062008.csv", header=TRUE)
trtd<-read.csv("data/Ellsworth_stands_treatment_data.csv", header=TRUE)
#2. put the data together and standardize some columns for model fitting
source("analyses/source/prep_data.R")
#Simulating plot resurvey data to figure out how many plots we need to resurvey
#Started November 8, 2019 by ailene ettinger
#ailene.ettinger@tnc.org
# housekeeping
#helpful website for simulatig: https://aosmith.rbind.io/2018/04/23/simulate-simulate-part-2/#simulate-simulate-dance-to-the-music
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(dplyr)
library(lme4)
library(scales)
#set working directory
setwd("~/GitHub/ellsworth")
#1. read in tree dat, plot data, and treatment data
treed<-read.csv("data/LIVETREES_CLEAN_04282008.csv", header=TRUE)
plotd<-read.csv("data/PLOT_CLEAN_11062008.csv", header=TRUE)
trtd<-read.csv("data/Ellsworth_stands_treatment_data.csv", header=TRUE)
#2. put the data together and standardize some columns for model fitting
treed<-treed[,1:21]
#Summarize number of trees in each plot to get pre-treatment tree density
dens<-aggregate(treed$TAG,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),length)
colnames(dens)<-c("SITE_ID","BASIN","PLOT","predens")
#Summarize number of trees in each plot to get pre-treatment tree density
dens<-aggregate(treed$TAG,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),length)
colnames(dens)<-c("SITE_ID","BASIN","PLOT","predens")
dbh.mn<-aggregate(treed$DBH,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(dbh.mn)<-c("SITE_ID","BASIN","PLOT","dbh.mn")
ht.mn<-aggregate(treed$HT,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(ht.mn)<-c("SITE_ID","BASIN","PLOT","dbh.mn")
crown.mn<-aggregate(treed$CROWN,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(crown.mn)<-c("SITE_ID","BASIN","PLOT","crown.mn")
#merge density with other plot data
plotd2<-full_join(plotd,dens)#plot-level data
plotd2<-full_join(plotd2,dbh.mn)#plot-level data
plotd2<-left_join(plotd2,ht.mn)#plot-level data
plotd2<-full_join(plotd2,crown.mn)#plot-level data
treed2<-left_join(treed,plotd2)#individal tree data
#merge treatment data with other plot data
colnames(trtd)<-c("BASIN","STAND_ID", "STAND_TYPE","TREATED","COM.THIN","PCT","YR_TREATED","AGE_2019")
plotd3<-left_join(plotd2,trtd)
#hmm...the treatment plot data is missing some stands and having trouble merging. keep it as a separate file for now
# looks like basins N2, S3, and C1 were treated
#For now, let's assume that the treatment lead to removal of 30% of the density
plotd2$trt<-0
plotd2$trt[plotd2$BASIN=="C1"|plotd2$BASIN=="N2"|plotd2$BASIN=="S3"]<-0.3*plotd2$predens[plotd2$BASIN=="C1"|plotd2$BASIN=="N2"|plotd2$BASIN=="S3"]
#add other possble explanatory variables (cwd, dbh, height, crown)
treed2$CROWN<-as.numeric(treed2$CROWN)
plotd2$TRT<-as.factor(plotd2$TRT)
plotd2$BLOCK<-as.factor(plotd2$BLOCK)
plotd2$predens<-as.numeric(plotd2$predens)
treed2$HT<-as.numeric(treed2$HT)
treed2$DBH<-as.numeric(treed2$DBH)
treed2$CROWN<-as.numeric(treed2$CROWN)
#standardize predictors
plotd2$predens.z<-(plotd2$predens-mean(plotd2$predens))/sd(plotd2$predens)
plotd2$age2006.z<-(plotd2$AGE_BH_2006-mean(plotd2$AGE_BH_2006, na.rm=TRUE))/sd(plotd2$AGE_BH_2006, na.rm=TRUE)
plotd2$trt.z<-(plotd2$trt-mean(plotd2$trt))/sd(plotd2$trt)
plotd2$dbh.z<-(plotd2$dbh.mn-mean(plotd2$dbh.mn))/sd(plotd2$dbh.mn)
plotd2$ht.z<-(plotd2$ht.mn-mean(plotd2$ht.mn))/sd(plotd2$ht.mn)
ht.mn
plotd2
head(ht.mn)
ht.mn<-aggregate(treed$HT,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(ht.mn)<-c("SITE_ID","BASIN","PLOT","ht.mn")
crown.mn<-aggregate(treed$CROWN,by=list(treed$SITE_ID,treed$BASIN,treed$PLOT),mean, na.rm=TRUE)
colnames(crown.mn)<-c("SITE_ID","BASIN","PLOT","crown.mn")
#merge density with other plot data
plotd2<-full_join(plotd,dens)#plot-level data
plotd2<-full_join(plotd2,dbh.mn)#plot-level data
plotd2<-left_join(plotd2,ht.mn)#plot-level data
plotd2<-full_join(plotd2,crown.mn)#plot-level data
treed2<-left_join(treed,plotd2)#individal tree data
#merge treatment data with other plot data
colnames(trtd)<-c("BASIN","STAND_ID", "STAND_TYPE","TREATED","COM.THIN","PCT","YR_TREATED","AGE_2019")
plotd3<-left_join(plotd2,trtd)
#hmm...the treatment plot data is missing some stands and having trouble merging. keep it as a separate file for now
# looks like basins N2, S3, and C1 were treated
#For now, let's assume that the treatment lead to removal of 30% of the density
plotd2$trt<-0
plotd2$trt[plotd2$BASIN=="C1"|plotd2$BASIN=="N2"|plotd2$BASIN=="S3"]<-0.3*plotd2$predens[plotd2$BASIN=="C1"|plotd2$BASIN=="N2"|plotd2$BASIN=="S3"]
#add other possble explanatory variables (cwd, dbh, height, crown)
treed2$CROWN<-as.numeric(treed2$CROWN)
plotd2$TRT<-as.factor(plotd2$TRT)
plotd2$BLOCK<-as.factor(plotd2$BLOCK)
plotd2$predens<-as.numeric(plotd2$predens)
treed2$HT<-as.numeric(treed2$HT)
treed2$DBH<-as.numeric(treed2$DBH)
treed2$CROWN<-as.numeric(treed2$CROWN)
#standardize predictors
plotd2$predens.z<-(plotd2$predens-mean(plotd2$predens))/sd(plotd2$predens)
plotd2$age2006.z<-(plotd2$AGE_BH_2006-mean(plotd2$AGE_BH_2006, na.rm=TRUE))/sd(plotd2$AGE_BH_2006, na.rm=TRUE)
plotd2$trt.z<-(plotd2$trt-mean(plotd2$trt))/sd(plotd2$trt)
plotd2$dbh.z<-(plotd2$dbh.mn-mean(plotd2$dbh.mn))/sd(plotd2$dbh.mn)
plotd2$ht.z<-(plotd2$ht.mn-mean(plotd2$ht.mn))/sd(plotd2$ht.mn)
treed2$dbh.z<-(treed2$dbh.mn-mean(treed2$dbh.mn))/sd(treed2$dbh.mn)
treed2$ht.z<-(treed2$ht.mn-mean(plotd2$ht.mn))/sd(treed2$ht.mn)
#set up data:
x<-subset(plotd2, select=c(BLOCK,predens.z, age2006.z, trt.z))#AGE_BH_2006 is related to AGE but is numeric, with some NAS
colnames(x)[1]<-c("block")
#remove NAs
x<-x[-which(is.na(x$age2006.z)),]
#Simulating plot resurvey data to figure out how many plots we need to resurvey
#Started November 8, 2019 by ailene ettinger
#ailene.ettinger@tnc.org
# housekeeping
#helpful website for simulatig: https://aosmith.rbind.io/2018/04/23/simulate-simulate-part-2/#simulate-simulate-dance-to-the-music
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(dplyr)
library(lme4)
library(scales)
#set working directory
setwd("~/GitHub/ellsworth")
#1. read in tree dat, plot data, and treatment data
treed<-read.csv("data/LIVETREES_CLEAN_04282008.csv", header=TRUE)
plotd<-read.csv("data/PLOT_CLEAN_11062008.csv", header=TRUE)
trtd<-read.csv("data/Ellsworth_stands_treatment_data.csv", header=TRUE)
#2. put the data together and standardize some columns for model fitting
source("analyses/source/prep_data.R")
#3. fit models of pre-treatment data to get estimates of block-level and plot-level varianace
source("analyses/source/run_premods.R")
#4. set expected effect sizes for simulating data
dens.b = 1#effect of pre-density
age.b = -.5#age effect (older stands have lower post-density?)
trt.b = -1 #trt is amount removed (0,3 x predens)
sigma.bl = 1#change to estimated block-level sigma from 2006 data print(VarCorr(study),comp="Variance")
sigma = .5#change to estimated sigma from 2006 data using
b0 = 0 # change to something else?
#use the effect sizes and predictors plus error to generate the y variable
#betas<-c(dens.b,age.b)
#ypred<- as.matrix(x)%*%betas + rnorm(nrow(x),0,sigma)
#plot(x$predens,ypred)
#alldatmod<-lm(ypred~x$predens+x$AGE_BH_2006)
#coef(alldatmod)
block = x$block
nblock = length(unique(x$block))
nplot = 28
blockeff = rep(rnorm(nblock, 0, sigma.bl), each = nplot)
ploteff = rnorm(nblock*nplot, 0, sigma)
(ypred = b0 + dens.b*x$predens.z + age.b*x$age2006.z + trt.b*x$trt.z+ blockeff + ploteff)
lmer(ypred ~ predens.z + age2006.z + trt.z+ (1|block), data=x )
#now lets write a for loop that uses different sample sizes to figure out how many plots are needed to correctly recover the effects
fulldat<-cbind(ypred,x)
nplots<-rep(c(5,10,15,20,25), times=10)
allplots<-c()
for(i in 1:length(nplots)){
subsdatc<-sample_n(fulldat[fulldat$block=="C",], nplots[i])
subsdatn<-sample_n(fulldat[fulldat$block=="N",], nplots[i])
subsdats<-sample_n(fulldat[fulldat$block=="S",], nplots[i])
subsdat<-rbind(subsdatc,subsdatn,subsdats)
fit<-lmer(ypred ~ predens.z + age2006.z + trt.z+ (1|block), data=subsdat)
fit.sum<-c(nplots[i],fixef(fit),confint(fit)[3,],confint(fit)[4,],confint(fit)[5,],confint(fit)[6,])
allplots<-rbind(allplots,fit.sum)
}
allplots<-as.data.frame(allplots)
colnames(allplots)<-c("n","int","predens.b","age.b","trt.b","int.lc","int.uc","predens.b.lc","predens.b.uc","age.b.lc","age.b.uc","trt.b.lc","trt.b.uc")
pdf(paste("analyses/figures/plotnums_var",sigma,".pdf",sep=""),height=5,width=8)
#quartz()
windows()
par(mfrow=c(1,3))
plot(allplots$n,allplots$predens.b,main="pre-density",ylim=c(0,2))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$predens.b.lc[i],allplots$n[i],allplots$predens.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=dens.b, lwd=2, col="red")
plot(allplots$n,allplots$age.b,main="age",ylim=c(-1,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$age.b.lc[i],allplots$n[i],allplots$age.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=age.b, lwd=2, col="red")
plot(allplots$n,allplots$trt.b,main="trt",ylim=c(-1.5,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$trt.b.lc[i],allplots$n[i],allplots$trt.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=trt.b, lwd=2, col="red")
dev.off()
allplots<-as.data.frame(allplots)
colnames(allplots)<-c("n","int","predens.b","age.b","trt.b","int.lc","int.uc","predens.b.lc","predens.b.uc","age.b.lc","age.b.uc","trt.b.lc","trt.b.uc")
pdf(paste("analyses/figures/plotnums_var",sigma,".pdf",sep=""),height=5,width=8)
par(mfrow=c(1,3))
plot(allplots$n,allplots$predens.b,main="pre-density",ylim=c(0,2))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$predens.b.lc[i],allplots$n[i],allplots$predens.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=dens.b, lwd=2, col="red")
plot(allplots$n,allplots$age.b,main="age",ylim=c(-1,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$age.b.lc[i],allplots$n[i],allplots$age.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=age.b, lwd=2, col="red")
plot(allplots$n,allplots$trt.b,main="trt",ylim=c(-1.5,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$trt.b.lc[i],allplots$n[i],allplots$trt.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=trt.b, lwd=2, col="red")
dev.off()
windows()
par(mfrow=c(1,3))
plot(allplots$n,allplots$predens.b,main="pre-density",ylim=c(0,2))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$predens.b.lc[i],allplots$n[i],allplots$predens.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=dens.b, lwd=2, col="red")
plot(allplots$n,allplots$age.b,main="age",ylim=c(-1,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$age.b.lc[i],allplots$n[i],allplots$age.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=age.b, lwd=2, col="red")
plot(allplots$n,allplots$trt.b,main="trt",ylim=c(-1.5,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$trt.b.lc[i],allplots$n[i],allplots$trt.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=trt.b, lwd=2, col="red")
summary(densmod)#positive effect of age on density, before treatment, there is much higher variance by block than by TRT!
summary(htmod)#positive effect of age on ht, higher variance by TRT...
summary(dbhmod)#positive effect of age on dbh, similar variance by TRT and Block
summary(crownmod)#positive effect of age on crown, lsightly higher variance in TRt than block
#
225/3
nplots<-rep(c(5,10,15,20,25,40,50), times=10)
allplots<-c()
for(i in 1:length(nplots)){
subsdatc<-sample_n(fulldat[fulldat$block=="C",], nplots[i])
subsdatn<-sample_n(fulldat[fulldat$block=="N",], nplots[i])
subsdats<-sample_n(fulldat[fulldat$block=="S",], nplots[i])
subsdat<-rbind(subsdatc,subsdatn,subsdats)
fit<-lmer(ypred ~ predens.z + age2006.z + trt.z+ (1|block), data=subsdat)
fit.sum<-c(nplots[i],fixef(fit),confint(fit)[3,],confint(fit)[4,],confint(fit)[5,],confint(fit)[6,])
allplots<-rbind(allplots,fit.sum)
}
warnings()
allplots<-as.data.frame(allplots)
colnames(allplots)<-c("n","int","predens.b","age.b","trt.b","int.lc","int.uc","predens.b.lc","predens.b.uc","age.b.lc","age.b.uc","trt.b.lc","trt.b.uc")
#quartz()
windows()
par(mfrow=c(1,3))
plot(allplots$n,allplots$predens.b,main="pre-density",ylim=c(0,2))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$predens.b.lc[i],allplots$n[i],allplots$predens.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=dens.b, lwd=2, col="red")
plot(allplots$n,allplots$age.b,main="age",ylim=c(-1,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$age.b.lc[i],allplots$n[i],allplots$age.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=age.b, lwd=2, col="red")
plot(allplots$n,allplots$trt.b,main="trt",ylim=c(-1.5,0))
for(i in 1:dim(allplots)[1]){
arrows(allplots$n[i],allplots$trt.b.lc[i],allplots$n[i],allplots$trt.b.uc[i],length=0.1,code = 0, angle = 90, lwd=3,col= alpha("gray",0.1))
}
abline(h=trt.b, lwd=2, col="red")
30*3*2
unique(plotd2$PLOT)
unique(plotd2$SITE_ID
)
head(plotd2)
unique(plotd2$STAND_ID)
table(plotd2$STAND.TYPE,plotd2$PLOT)
table(plotd2$STAND.TYPE,plotd2$BLOCK)
table(plotd2$STAND.TYPE,plotd2$TRT)
